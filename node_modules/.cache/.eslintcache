[{"/Volumes/Work/Projects/react-pwa-example/src/index.js":"1","/Volumes/Work/Projects/react-pwa-example/src/serviceWorkerRegistration.js":"2","/Volumes/Work/Projects/react-pwa-example/src/reportWebVitals.js":"3","/Volumes/Work/Projects/react-pwa-example/src/App.js":"4","/Volumes/Work/Projects/react-pwa-example/src/Routes/index.js":"5","/Volumes/Work/Projects/react-pwa-example/src/Routes/Routing.js":"6","/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignUp.js":"7","/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignIn.js":"8","/Volumes/Work/Projects/react-pwa-example/src/components/Home/index.js":"9","/Volumes/Work/Projects/react-pwa-example/src/firebase-config.js":"10","/Volumes/Work/Projects/react-pwa-example/src/components/Layout/PageSetting.js":"11","/Volumes/Work/Projects/react-pwa-example/src/components/Home/Home.js":"12","/Volumes/Work/Projects/react-pwa-example/src/common/ErrorMessages/errorMessage.js":"13","/Volumes/Work/Projects/react-pwa-example/src/service-worker.js":"14"},{"size":1062,"mtime":1652879488684,"results":"15","hashOfConfig":"16"},{"size":5092,"mtime":1652892247924,"results":"17","hashOfConfig":"16"},{"size":364,"mtime":1652860204982,"results":"18","hashOfConfig":"16"},{"size":126,"mtime":1652860204980,"results":"19","hashOfConfig":"16"},{"size":53,"mtime":1652860204981,"results":"20","hashOfConfig":"16"},{"size":605,"mtime":1652860204980,"results":"21","hashOfConfig":"16"},{"size":3415,"mtime":1652870073848,"results":"22","hashOfConfig":"16"},{"size":3512,"mtime":1652869973877,"results":"23","hashOfConfig":"16"},{"size":40,"mtime":1652860204981,"results":"24","hashOfConfig":"16"},{"size":838,"mtime":1652860204981,"results":"25","hashOfConfig":"16"},{"size":648,"mtime":1652860204981,"results":"26","hashOfConfig":"16"},{"size":863,"mtime":1652860204981,"results":"27","hashOfConfig":"16"},{"size":704,"mtime":1652869363517,"results":"28","hashOfConfig":"16"},{"size":2841,"mtime":1652886984631,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uy4b2d",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"/Volumes/Work/Projects/react-pwa-example/src/index.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/serviceWorkerRegistration.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/reportWebVitals.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/App.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/Routes/index.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/Routes/Routing.js",["80"],[],"import React from \"react\";\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\nimport SignUp from \"../components/Login/SignUp\";\nimport SignIn from \"../components/Login/SignIn\";\nimport { Home } from \"../components/Home\";\nimport App from \"../App\";\n\nconst Routing = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/home\" element={<Home />} />\n        <Route path=\"/register\" element={<SignUp />} />\n        <Route path=\"/login\" element={<SignIn />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Routing;\n","/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignUp.js",["81","82"],[],"import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { app } from '../../firebase-config';\nimport { Form, Button } from 'react-bootstrap';\nimport swal from 'sweetalert';\n\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\nimport mapAuthCodeToMessage from '../../common/ErrorMessages/errorMessage';\n\nimport PageSetting from '../Layout/PageSetting';\n\nconst SignUp = () => {\n  let navigate = useNavigate();\n  const [signUpMessage, setSignUpMessage] = useState('');\n\n  signUpMessage && swal(signUpMessage);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Invalid email address')\n        .required('Email required'),\n      password: Yup.string()\n        .required('Password required.')\n        .min(8, 'Password is too short - should be 8 chars minimum.')\n        .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n    }),\n    onSubmit: async (values) => {\n      const authentication = getAuth();\n      createUserWithEmailAndPassword(\n        authentication,\n        values.email,\n        values.password\n      )\n        .then((response) => {\n          navigate('/login', { replace: true });\n          sessionStorage.setItem(\n            'Auth Token',\n            response._tokenResponse.refreshToken\n          );\n          // console.log('response', response);\n        })\n        .catch((error) => {\n          setSignUpMessage(mapAuthCodeToMessage(error?.code));\n        });\n    },\n  });\n  return (\n    <PageSetting pageName='SignUp'>\n      <form onSubmit={formik.handleSubmit}>\n        <Form.Control\n          type='email'\n          placeholder='Email'\n          onChange={formik.handleChange}\n          name='email'\n          value={formik.values.email}\n        />\n        {/* <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      /> */}\n        {formik.touched.email && formik.errors.email ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.email}\n          </div>\n        ) : null}\n        <Form.Control\n          type='password'\n          placeholder='Password'\n          onChange={formik.handleChange}\n          name='password'\n          value={formik.values.password}\n          className='mt-3'\n        />\n        {/* <label htmlFor=\"password\">password Address</label>\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> */}\n        {formik.touched.password && formik.errors.password ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.password}\n          </div>\n        ) : null}\n        {/* {signUpMessage && (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {signUpMessage}\n          </div>\n        )} */}\n        <Button type='submit' className='mt-3'>\n          Submit\n        </Button>\n      </form>\n    </PageSetting>\n  );\n};\n\nexport default SignUp;\n","/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignIn.js",["83","84"],[],"import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { app } from '../../firebase-config';\nimport PageSetting from '../Layout/PageSetting';\nimport { Form, Button } from 'react-bootstrap';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\nimport swal from 'sweetalert';\n\nimport mapAuthCodeToMessage from '../../common/ErrorMessages/errorMessage';\n\nconst SignIn = () => {\n  let navigate = useNavigate();\n  const [signinMessage, setSigninpMessage] = useState('');\n\n  signinMessage && swal(signinMessage);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string()\n        .required('No password provided.')\n        .min(8, 'Password is too short - should be 8 chars minimum.')\n        .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n    }),\n    onSubmit: async (values) => {\n      // alert(JSON.stringify(values, null, 2));\n      const authentication = getAuth();\n      signInWithEmailAndPassword(authentication, values.email, values.password)\n        .then((response) => {\n          navigate('/', { replace: true });\n          sessionStorage.setItem(\n            'Auth Token',\n            response._tokenResponse.refreshToken\n          );\n          console.log('111dsfdfgfhg--->', response);\n        })\n        .catch((error) => {\n          setSigninpMessage(mapAuthCodeToMessage(error?.code));\n          console.log('in catch');\n        });\n    },\n  });\n  return (\n    <PageSetting pageName='SignIn'>\n      <form onSubmit={formik.handleSubmit}>\n        {/* <label htmlFor=\"email\">Email Address</label>\n        <input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        /> */}\n        <Form.Control\n          type='email'\n          placeholder='Email'\n          onChange={formik.handleChange}\n          name='email'\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.email}\n          </div>\n        ) : null}\n\n        {/* <label htmlFor=\"password\">password Address</label>\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> */}\n        <Form.Control\n          type='password'\n          placeholder='Password'\n          onChange={formik.handleChange}\n          name='password'\n          value={formik.values.password}\n          className='mt-3'\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.password}\n          </div>\n        ) : null}\n        {/* {signinMessage && (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {signinMessage}\n          </div>\n        )} */}\n\n        <Button type='submit' className='mt-3'>\n          Submit\n        </Button>\n      </form>\n    </PageSetting>\n  );\n};\n\nexport default SignIn;\n","/Volumes/Work/Projects/react-pwa-example/src/components/Home/index.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/firebase-config.js",["85"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAMLly4sCV_N37um6p5Ud-cKEJ7Hl8SJr0\",\n  authDomain: \"react-pwa-app-edd00.firebaseapp.com\",\n  projectId: \"react-pwa-app-edd00\",\n  storageBucket: \"react-pwa-app-edd00.appspot.com\",\n  messagingSenderId: \"637348920177\",\n  appId: \"1:637348920177:web:599afb5423aec470d5d4d0\",\n  measurementId: \"G-EWWM2J979M\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);","/Volumes/Work/Projects/react-pwa-example/src/components/Layout/PageSetting.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/components/Home/Home.js",["86"],[],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Home = () => {\n  let navigate = useNavigate();\n  let bool = true;\n  const [logOut, setLogOut] = useState(bool);\n  let authToken = sessionStorage.getItem(\"Auth Token\");\n  console.log(\"authToken\", authToken);\n  //let authToken = sessionStorage.getItem(\"Auth Token\");\n  useEffect(() => {\n    console.log(\"authToken\", authToken);\n    console.log('run');\n    if (authToken) {\n      navigate(\"/home\");\n    }\n\n    if (!authToken) {\n      navigate(\"/login\");\n    }\n  }, [logOut]);\n  return (\n    <div>\n      Home\n      <Button\n        onClick={() => {\n          sessionStorage.removeItem(\"Auth Token\");\n          setLogOut(!bool);\n        }}\n      >\n        LogOut\n      </Button>\n    </div>\n  );\n};\n\nexport default Home;\n","/Volumes/Work/Projects/react-pwa-example/src/common/ErrorMessages/errorMessage.js",["87"],[],"import React from 'react';\n\nconst mapAuthCodeToMessage = (authCode) => {\n  console.log('mapAuthCodeToMessage in ', authCode);\n  switch (authCode) {\n    case 'auth/wrong-password':\n      return 'Password provided is not corrected';\n\n    case 'auth/wrong-email':\n      return 'Email provided is invalid';\n    case 'auth/email-already-exists':\n      return 'Email already exists';\n    case 'auth/too-many-requests':\n      return 'Too many requests';\n    case 'auth/user-not-found':\n      return 'User not found';\n\n    case 'auth/email-already-in-use':\n      return 'Email already in use.';\n    // Many more authCode mapping here...\n\n    default:\n      return '';\n  }\n};\nexport default mapAuthCodeToMessage;\n",[],"/Volumes/Work/Projects/react-pwa-example/src/service-worker.js",[],["88","89","90","91"],[],{"ruleId":"92","severity":1,"message":"93","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":11},{"ruleId":"92","severity":1,"message":"96","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"97","line":11,"column":3,"nodeType":"94","messageId":"95","endLine":11,"endColumn":29},{"ruleId":"92","severity":1,"message":"96","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"98","line":11,"column":3,"nodeType":"94","messageId":"95","endLine":11,"endColumn":33},{"ruleId":"92","severity":1,"message":"99","line":21,"column":7,"nodeType":"94","messageId":"95","endLine":21,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":22,"column":6,"nodeType":"102","endLine":22,"endColumn":14,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"104","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"105","severity":2,"message":"106","line":22,"column":18,"nodeType":"94","messageId":"107","endLine":22,"endColumn":22,"suppressions":"108"},{"ruleId":"105","severity":2,"message":"106","line":54,"column":20,"nodeType":"94","messageId":"107","endLine":54,"endColumn":24,"suppressions":"109"},{"ruleId":"105","severity":2,"message":"106","line":67,"column":1,"nodeType":"94","messageId":"107","endLine":67,"endColumn":5,"suppressions":"110"},{"ruleId":"105","severity":2,"message":"106","line":69,"column":5,"nodeType":"94","messageId":"107","endLine":69,"endColumn":9,"suppressions":"111"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'app' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'createUserWithEmailAndPassword' is defined but never used.","'analytics' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'React' is defined but never used.","no-restricted-globals","Unexpected use of 'self'.","defaultMessage",["113"],["114"],["115"],["116"],{"desc":"117","fix":"118"},{"kind":"119","justification":"120"},{"kind":"119","justification":"120"},{"kind":"119","justification":"120"},{"kind":"119","justification":"120"},"Update the dependencies array to be: [authToken, logOut, navigate]",{"range":"121","text":"122"},"directive","",[611,619],"[authToken, logOut, navigate]"]