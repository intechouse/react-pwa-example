[{"/Volumes/Work/Projects/react-pwa-example/src/index.js":"1","/Volumes/Work/Projects/react-pwa-example/src/serviceWorkerRegistration.js":"2","/Volumes/Work/Projects/react-pwa-example/src/reportWebVitals.js":"3","/Volumes/Work/Projects/react-pwa-example/src/App.js":"4","/Volumes/Work/Projects/react-pwa-example/src/Routes/index.js":"5","/Volumes/Work/Projects/react-pwa-example/src/Routes/Routing.js":"6","/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignUp.js":"7","/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignIn.js":"8","/Volumes/Work/Projects/react-pwa-example/src/components/Home/index.js":"9","/Volumes/Work/Projects/react-pwa-example/src/firebase-config.js":"10","/Volumes/Work/Projects/react-pwa-example/src/components/Layout/PageSetting.js":"11","/Volumes/Work/Projects/react-pwa-example/src/components/Home/Home.js":"12"},{"size":1065,"mtime":1652860204982,"results":"13","hashOfConfig":"14"},{"size":5064,"mtime":1652860204982,"results":"15","hashOfConfig":"14"},{"size":364,"mtime":1652860204982,"results":"16","hashOfConfig":"14"},{"size":126,"mtime":1652860204980,"results":"17","hashOfConfig":"14"},{"size":53,"mtime":1652860204981,"results":"18","hashOfConfig":"14"},{"size":605,"mtime":1652860204980,"results":"19","hashOfConfig":"14"},{"size":2978,"mtime":1652861321237,"results":"20","hashOfConfig":"14"},{"size":3032,"mtime":1652861136185,"results":"21","hashOfConfig":"14"},{"size":40,"mtime":1652860204981,"results":"22","hashOfConfig":"14"},{"size":838,"mtime":1652860204981,"results":"23","hashOfConfig":"14"},{"size":648,"mtime":1652860204981,"results":"24","hashOfConfig":"14"},{"size":863,"mtime":1652860204981,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uy4b2d",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/Work/Projects/react-pwa-example/src/index.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/serviceWorkerRegistration.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/reportWebVitals.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/App.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/Routes/index.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/Routes/Routing.js",["65"],[],"/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignUp.js",["66","67"],[],"import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { app } from '../../firebase-config';\nimport { Form, Button } from 'react-bootstrap';\n\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\nimport PageSetting from '../Layout/PageSetting';\n\nconst SignUp = () => {\n  let navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Invalid email address')\n        .required('Email required'),\n      password: Yup.string()\n        .required('Password required.')\n        .min(8, 'Password is too short - should be 8 chars minimum.')\n        .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n    }),\n    onSubmit: async (values) => {\n      const authentication = getAuth();\n      createUserWithEmailAndPassword(\n        authentication,\n        values.email,\n        values.password\n      )\n        .then((response) => {\n          navigate('/login', { replace: true });\n          sessionStorage.setItem(\n            'Auth Token',\n            response._tokenResponse.refreshToken\n          );\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  });\n  return (\n    <PageSetting pageName='SignUp'>\n      <form onSubmit={formik.handleSubmit}>\n        <Form.Control\n          type='email'\n          placeholder='Email'\n          onChange={formik.handleChange}\n          name='email'\n          value={formik.values.email}\n        />\n        {/* <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      /> */}\n        {formik.touched.email && formik.errors.email ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.email}\n          </div>\n        ) : null}\n        <Form.Control\n          type='password'\n          placeholder='Password'\n          onChange={formik.handleChange}\n          name='password'\n          value={formik.values.password}\n          className='mt-3'\n        />\n        {/* <label htmlFor=\"password\">password Address</label>\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> */}\n        {formik.touched.password && formik.errors.password ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.password}\n          </div>\n        ) : null}\n\n        <Button type='submit' className='mt-3'>\n          Submit\n        </Button>\n      </form>\n    </PageSetting>\n  );\n};\n\nexport default SignUp;\n","/Volumes/Work/Projects/react-pwa-example/src/components/Login/SignIn.js",["68","69"],[],"import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { app } from '../../firebase-config';\nimport PageSetting from '../Layout/PageSetting';\nimport { Form, Button } from 'react-bootstrap';\nimport {\n  getAuth,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\n\nconst SignIn = () => {\n  let navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Required'),\n      password: Yup.string()\n        .required('No password provided.')\n        .min(8, 'Password is too short - should be 8 chars minimum.')\n        .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n    }),\n    onSubmit: async (values) => {\n      // alert(JSON.stringify(values, null, 2));\n      const authentication = getAuth();\n      signInWithEmailAndPassword(authentication, values.email, values.password)\n        .then((response) => {\n          navigate('/', { replace: true });\n          sessionStorage.setItem(\n            'Auth Token',\n            response._tokenResponse.refreshToken\n          );\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  });\n  return (\n    <PageSetting pageName='SignIn'>\n      <form onSubmit={formik.handleSubmit}>\n        {/* <label htmlFor=\"email\">Email Address</label>\n        <input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        /> */}\n        <Form.Control\n          type='email'\n          placeholder='Email'\n          onChange={formik.handleChange}\n          name='email'\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.email}\n          </div>\n        ) : null}\n\n        {/* <label htmlFor=\"password\">password Address</label>\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> */}\n        <Form.Control\n          type='password'\n          placeholder='Password'\n          onChange={formik.handleChange}\n          name='password'\n          value={formik.values.password}\n          className='mt-3'\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div style={{ color: 'red', marginTop: '8px', fontSize: '13px' }}>\n            {formik.errors.password}\n          </div>\n        ) : null}\n\n        <Button type='submit' className='mt-3'>\n          Submit\n        </Button>\n      </form>\n    </PageSetting>\n  );\n};\n\nexport default SignIn;\n",[],"/Volumes/Work/Projects/react-pwa-example/src/components/Home/index.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/firebase-config.js",["70"],[],"/Volumes/Work/Projects/react-pwa-example/src/components/Layout/PageSetting.js",[],[],"/Volumes/Work/Projects/react-pwa-example/src/components/Home/Home.js",["71"],[],{"ruleId":"72","severity":1,"message":"73","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":11},{"ruleId":"72","severity":1,"message":"76","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"72","severity":1,"message":"77","line":10,"column":3,"nodeType":"74","messageId":"75","endLine":10,"endColumn":29},{"ruleId":"72","severity":1,"message":"76","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":11,"column":3,"nodeType":"74","messageId":"75","endLine":11,"endColumn":33},{"ruleId":"72","severity":1,"message":"79","line":21,"column":7,"nodeType":"74","messageId":"75","endLine":21,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":22,"column":6,"nodeType":"82","endLine":22,"endColumn":14,"suggestions":"83"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'app' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'createUserWithEmailAndPassword' is defined but never used.","'analytics' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authToken' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["84"],{"desc":"85","fix":"86"},"Update the dependencies array to be: [authToken, logOut, navigate]",{"range":"87","text":"88"},[611,619],"[authToken, logOut, navigate]"]